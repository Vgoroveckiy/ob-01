# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so they can be overwritten
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a list of files that should be ignored, see:
#   https://github.com/pyenv/pyenv#readme
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of a library, if you want to ignore the lock file, you can:
#   just ignore Pipfile.lock
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is recommended to include poetry.lock in version control.
#   However, in case of a library, if you want to ignore the lock file, you can:
#   just ignore poetry.lock
poetry.lock

# pdm
#   Similar to Pipfile.lock, it is recommended to include pdm.lock in version control.
#   However, in case of a library, if you want to ignore the lock file, you can:
#   just ignore pdm.lock
pdm.lock
pdm.lock

# PEP 582; used by e.g. pipenv and pdm
__pypackages__/

# Celery
celerybeat-schedule
celerybeat.pid

# SageMath
.sage/

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type checker
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
.idea/
*.iml
*.ipr
*.iws

# VS Code
.vscode/
.history
